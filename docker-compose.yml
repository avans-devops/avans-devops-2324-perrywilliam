version: '3.9'
services:
  app:
    build: 
      context: ./API
      dockerfile: Dockerfile.prod
    ports:
      - "5000:5000"
    volumes:
      - ./API:/API
      - /API/node_modules
    environment:
      - NODE_ENV=development
      - PORT=5000
    command: npm start
    depends_on:
      - mongo
  mongo:
    image: mongo
    environment:
        - MONGO_INITDB_ROOT_USERNAME=root
        - MONGO_INITDB_ROOT_PASSWORD=example
    expose:
      - "27017"
    volumes:
        - mongo-data:/data/db
        - ./mongo-data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always
  db-exporter:
    image: percona/mongodb_exporter:0.20
    ports:
      - "9216:9216"
      - "17001:17001"
    environment:
        - MONGODB_URI=mongodb://root:example@mongo:27017
        - mongodb.uri=mongodb://root:example@mongo:27017
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    environment:
      - NODE_ENV=development
      - PORT=81
    depends_on:
      - app
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    command: --web.enable-lifecycle --config.file=/etc/prometheus/prometheus.yml
  grafana:
    build: ../avans-devops-2324-perrywilliam/grafana
    ports:
      - "3000:3000"
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-devops
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "15671:15671"
      - "15672:15672"
      - "25672:25672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: secret
volumes:
    prometheus-data:
    mongo-data: {}